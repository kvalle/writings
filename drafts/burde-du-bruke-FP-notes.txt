Burde du bruke FP

Vi bruker en del FP i BEKK nå. (link)
Men er det et mål at alle skal bruke FP?

Alle språk har fordeler og ulemper

Riktig språk for teamet man jobber i
	Hvis ingen, eller bare noen få, i teamet er begeistret for å lære noe funksjonelt kommer det ikke til å fungere.
Ritkig språk for problemet
	Krav til realtime ytelse? Bruk noe lavnivå
	Trenger å lage fancy grafer med D3? JAvascript, eller noe med tett og enkel JS interop er veien å gå?
	Taper du millionger, eller blir hengt ut i avisa, hvis frontenden din tryner? Velg noe med gode kjøretidsgarantier.
	Noe som kjører både på server og i klienten? Ikke Elm
	Utvikling av mobil-app? JavaScript, eller kanskje Kotlin/Swift?

Noen ganger veier det ene mye tyngre enn det andre
Hvilket hensyn er viktigst der du er?

Ting som kanskje er mindre viktig enn du tror
	Vanskelig å finne folk:
	Kommer an på. Men flere har sett at det er _enklere_ å finne folk etter at de tok i bruk Elm

	Funksjonell programmering er abstrakt og vanskelig, og krever mye matte
	Usant. Men mange vil nok ønske å lære mer om sånt når de kommer inn i denne typen språk.
	Elm er et eksempel på et språk/community som aktivt unngår de "vanskelige" uttrykkene, med fokus på å gjøre ting enkelt.


Bør du lære FP?
Jeg mener man blir en flinkere programmerer av å lære FP, uavhengig av om en bruker det i prosjekter til daglig. (link)
Burde du lære FP? Ja. Burde du pushe for at teamet ditt på jobb skal ta det i bruk? It depends.
